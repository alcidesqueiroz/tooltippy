.tooltippy:before,
.tooltippy:after {
  opacity: 0;
  pointer-events: none;
  z-index: 1;
  transition: opacity 220ms ease, top 220ms ease, right 220ms ease, bottom 220ms ease, left 220ms ease;
}
.tooltippy:after {
  content: attr(data-tooltippy);
  position: absolute;
  white-space: nowrap;
}
.tooltippy:hover:before,
.tooltippy:hover:after {
  opacity: 1;
}
.tooltippy--top:before,
.tooltippy--bottom:before,
.tooltippy--top:after,
.tooltippy--bottom:after {
  left: 50%;
  -webkit-transform: translateX(-50%);
          transform: translateX(-50%);
}
.tooltippy--left:before,
.tooltippy--right:before,
.tooltippy--left:after,
.tooltippy--right:after {
  top: 50%;
  -webkit-transform: translateY(-50%);
          transform: translateY(-50%);
}
.tooltippy--top:before,
.tooltippy--top:after {
  bottom: calc(100% - 2rem);
}
.tooltippy--top:before {
  content: '';
  display: block;
  position: absolute;
  width: 1rem;
  height: 1rem;
  border-width: 1rem;
  border-style: solid;
  border-bottom-width: 0;
  border-color: transparent;
  border-top-color: #fd6760;
  margin-bottom: -0.5rem;
}
.tooltippy--top:hover:before,
.tooltippy--top:hover:after {
  bottom: 100%;
}
.tooltippy--right:before,
.tooltippy--right:after {
  left: calc(100% - 2rem);
}
.tooltippy--right:before {
  content: '';
  display: block;
  position: absolute;
  width: 1rem;
  height: 1rem;
  border-width: 1rem;
  border-style: solid;
  border-left-width: 0;
  border-color: transparent;
  border-right-color: #fd6760;
  margin-left: -0.5rem;
}
.tooltippy--right:hover:before,
.tooltippy--right:hover:after {
  left: 100%;
}
.tooltippy--bottom:before,
.tooltippy--bottom:after {
  top: calc(100% - 2rem);
}
.tooltippy--bottom:before {
  content: '';
  display: block;
  position: absolute;
  width: 1rem;
  height: 1rem;
  border-width: 1rem;
  border-style: solid;
  border-top-width: 0;
  border-color: transparent;
  border-bottom-color: #fd6760;
  margin-top: -0.5rem;
}
.tooltippy--bottom:hover:before,
.tooltippy--bottom:hover:after {
  top: 100%;
}
.tooltippy--left:before,
.tooltippy--left:after {
  right: calc(100% - 2rem);
}
.tooltippy--left:before {
  content: '';
  display: block;
  position: absolute;
  width: 1rem;
  height: 1rem;
  border-width: 1rem;
  border-style: solid;
  border-right-width: 0;
  border-color: transparent;
  border-left-color: #fd6760;
  margin-right: -0.5rem;
}
.tooltippy--left:hover:before,
.tooltippy--left:hover:after {
  right: 100%;
}
.tooltippy:before,
.tooltippy:after {
  opacity: 0;
  pointer-events: none;
  z-index: 1;
}
.tooltippy:after {
  font-family: 'Raleway', 'Open Sans', 'Segoe UI', Tahoma, sans-serif;
  color: #fff;
  background-color: #fd6760;
  padding: 1rem 1.8rem;
  font-size: 1.2rem;
  font-weight: 500;
  border-radius: 2rem;
  text-shadow: 0 0 0.2rem #cf0c03;
}
/*# sourceMappingURL=data:application/json;base64, */